openapi: 3.0.0
info:
  version: 0.0.0
  title: RESTful API
  description: >-
    バックエンドAPI
servers:
  - url: 'http://{host}:8081/api/v1'
    description: go service api server endpoint application
    variables:
      host:
        default: localhost
        enum:
          - localhost
paths:
  /register:
    post:
      tags:
        - user
      summary: ユーザ登録
      description: |
        クライアントが入力する情報をもとにユーザ情報を登録する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 山田太郎
                email:
                  type: string
                  format: email
                  example: yamada@hoge.hoge
                password:
                  type: string
                  format: password
                  example: qwerty123456789
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: ユーザ情報登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 200
                  method:
                    type: string
                    example: "POST"
                  message:
                    type: string
                    example: "ユーザ登録に成功しました。"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                required:
                  - statusCode
                  - method
                  - message
                  - data
        '409':
          description: |
            登録済みのメールアドレス
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 409
                  method:
                    type: string
                    example: "POST"
                  message:
                    type: string
                    example: "登録済みのメールアドレスです。"
                  data: 
                    type: object
                    example: null
        '500':
          $ref: '#/components/responses/500Error'
components:
  responses:
    500Error:
      description: |
        サーバー上のエラー
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                example: "500"
              method:
                type: string
                example: "POST"
              message: 
                type: string
                example: "サーバー側で何らかのエラーが発生しました。"
              data:
                type: object
                example: null
